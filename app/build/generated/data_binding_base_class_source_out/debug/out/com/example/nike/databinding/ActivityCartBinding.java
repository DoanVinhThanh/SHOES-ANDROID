// Generated by view binder compiler. Do not edit!
package com.example.nike.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nike.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCartBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout btnBagToHome;

  @NonNull
  public final AppCompatButton btnCheckOut;

  @NonNull
  public final AppCompatButton btnShopnowCart;

  @NonNull
  public final ImageView emptyImgCart;

  @NonNull
  public final TextView emptyMsgCart;

  @NonNull
  public final RecyclerView recyclerViewCart;

  @NonNull
  public final LinearLayout totalCart;

  private ActivityCartBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout btnBagToHome,
      @NonNull AppCompatButton btnCheckOut, @NonNull AppCompatButton btnShopnowCart,
      @NonNull ImageView emptyImgCart, @NonNull TextView emptyMsgCart,
      @NonNull RecyclerView recyclerViewCart, @NonNull LinearLayout totalCart) {
    this.rootView = rootView;
    this.btnBagToHome = btnBagToHome;
    this.btnCheckOut = btnCheckOut;
    this.btnShopnowCart = btnShopnowCart;
    this.emptyImgCart = emptyImgCart;
    this.emptyMsgCart = emptyMsgCart;
    this.recyclerViewCart = recyclerViewCart;
    this.totalCart = totalCart;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_bag_to_home;
      LinearLayout btnBagToHome = ViewBindings.findChildViewById(rootView, id);
      if (btnBagToHome == null) {
        break missingId;
      }

      id = R.id.btn_check_out;
      AppCompatButton btnCheckOut = ViewBindings.findChildViewById(rootView, id);
      if (btnCheckOut == null) {
        break missingId;
      }

      id = R.id.btnShopnow_cart;
      AppCompatButton btnShopnowCart = ViewBindings.findChildViewById(rootView, id);
      if (btnShopnowCart == null) {
        break missingId;
      }

      id = R.id.empty_img_cart;
      ImageView emptyImgCart = ViewBindings.findChildViewById(rootView, id);
      if (emptyImgCart == null) {
        break missingId;
      }

      id = R.id.empty_msg_cart;
      TextView emptyMsgCart = ViewBindings.findChildViewById(rootView, id);
      if (emptyMsgCart == null) {
        break missingId;
      }

      id = R.id.recycler_view_cart;
      RecyclerView recyclerViewCart = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCart == null) {
        break missingId;
      }

      id = R.id.total_cart;
      LinearLayout totalCart = ViewBindings.findChildViewById(rootView, id);
      if (totalCart == null) {
        break missingId;
      }

      return new ActivityCartBinding((RelativeLayout) rootView, btnBagToHome, btnCheckOut,
          btnShopnowCart, emptyImgCart, emptyMsgCart, recyclerViewCart, totalCart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
