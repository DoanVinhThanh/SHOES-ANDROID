// Generated by view binder compiler. Do not edit!
package com.example.nike.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nike.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAdminProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnDeleteProduct;

  @NonNull
  public final ImageView btnEditProduct;

  @NonNull
  public final TextView categoryAdminProduct;

  @NonNull
  public final ImageView imgAdminProduct;

  @NonNull
  public final TextView nameAdminProduct;

  @NonNull
  public final TextView priceAdminProduct;

  @NonNull
  public final TextView sizeAdminProduct;

  private ItemAdminProductBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView btnDeleteProduct, @NonNull ImageView btnEditProduct,
      @NonNull TextView categoryAdminProduct, @NonNull ImageView imgAdminProduct,
      @NonNull TextView nameAdminProduct, @NonNull TextView priceAdminProduct,
      @NonNull TextView sizeAdminProduct) {
    this.rootView = rootView;
    this.btnDeleteProduct = btnDeleteProduct;
    this.btnEditProduct = btnEditProduct;
    this.categoryAdminProduct = categoryAdminProduct;
    this.imgAdminProduct = imgAdminProduct;
    this.nameAdminProduct = nameAdminProduct;
    this.priceAdminProduct = priceAdminProduct;
    this.sizeAdminProduct = sizeAdminProduct;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAdminProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAdminProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_admin_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAdminProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_product;
      ImageView btnDeleteProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteProduct == null) {
        break missingId;
      }

      id = R.id.btn_edit_product;
      ImageView btnEditProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnEditProduct == null) {
        break missingId;
      }

      id = R.id.category_admin_product;
      TextView categoryAdminProduct = ViewBindings.findChildViewById(rootView, id);
      if (categoryAdminProduct == null) {
        break missingId;
      }

      id = R.id.img_admin_product;
      ImageView imgAdminProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgAdminProduct == null) {
        break missingId;
      }

      id = R.id.name_admin_product;
      TextView nameAdminProduct = ViewBindings.findChildViewById(rootView, id);
      if (nameAdminProduct == null) {
        break missingId;
      }

      id = R.id.price_admin_product;
      TextView priceAdminProduct = ViewBindings.findChildViewById(rootView, id);
      if (priceAdminProduct == null) {
        break missingId;
      }

      id = R.id.size_admin_product;
      TextView sizeAdminProduct = ViewBindings.findChildViewById(rootView, id);
      if (sizeAdminProduct == null) {
        break missingId;
      }

      return new ItemAdminProductBinding((LinearLayout) rootView, btnDeleteProduct, btnEditProduct,
          categoryAdminProduct, imgAdminProduct, nameAdminProduct, priceAdminProduct,
          sizeAdminProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
