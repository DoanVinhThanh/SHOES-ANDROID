// Generated by view binder compiler. Do not edit!
package com.example.nike.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nike.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnFavorite;

  @NonNull
  public final ImageView imageProduct;

  @NonNull
  public final TextView nameProduct;

  @NonNull
  public final TextView priceProduct;

  private ItemProductBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnFavorite,
      @NonNull ImageView imageProduct, @NonNull TextView nameProduct,
      @NonNull TextView priceProduct) {
    this.rootView = rootView;
    this.btnFavorite = btnFavorite;
    this.imageProduct = imageProduct;
    this.nameProduct = nameProduct;
    this.priceProduct = priceProduct;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_favorite;
      ImageView btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.image_product;
      ImageView imageProduct = ViewBindings.findChildViewById(rootView, id);
      if (imageProduct == null) {
        break missingId;
      }

      id = R.id.name_product;
      TextView nameProduct = ViewBindings.findChildViewById(rootView, id);
      if (nameProduct == null) {
        break missingId;
      }

      id = R.id.price_product;
      TextView priceProduct = ViewBindings.findChildViewById(rootView, id);
      if (priceProduct == null) {
        break missingId;
      }

      return new ItemProductBinding((LinearLayout) rootView, btnFavorite, imageProduct, nameProduct,
          priceProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
